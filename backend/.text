Create a backend for a Linktree-like application using Node.js, Express.js, and MongoDB. The backend should handle user profiles, links, shop links, and analytics tracking. Implement the following features with proper security, validation, and error handling:"

üî∏ Tech Stack
Node.js with Express.js for backend
MongoDB with Mongoose for database
Multer for file uploads
JWT authentication (if needed)
CORS enabled
üî∏ Features
1Ô∏è‚É£ User Management
Create a User model with:
username (required, unique, trimmed)
bio (optional)
profileImage (uploaded file stored on server)
links[] (title, URL, click count)
shopLinks[] (title, URL, click count)
analytics (traffic tracking: by device, by link, by referrer)
API to upload profile images using Multer
2Ô∏è‚É£ Links & Shop Links Management
CRUD operations for links and shopLinks
Add, update, delete personal links
Track clicks on links & shop links
3Ô∏è‚É£ Analytics Tracking
Track clicks per link & shop link
Capture traffic sources (referrer sites like Instagram, Twitter, etc.)
Detect device type (mobile, desktop, tablet)
4Ô∏è‚É£ API Endpoints
Method	Endpoint	Description
POST	/api/user/upload-profile	Upload profile image
POST	/api/links/add	Add a new link
GET	/api/links/:userId	Fetch all links of a user
DELETE	/api/links/:linkId	Delete a link
POST	/api/analytics/track	Track link clicks
GET	/api/analytics/:userId	Get analytics data
üî∏ Requirements
‚úÖ Use dotenv for environment variables
‚úÖ Implement CORS for cross-origin requests
‚úÖ Use Mongoose for schema validation
‚úÖ Implement error handling middleware

Expected Output:
A fully functional Express.js backend with MongoDB, featuring user management, link storage, analytics tracking, and secure file uploads.